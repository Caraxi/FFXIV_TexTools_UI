<local:FileViewControl x:Class="FFXIV_TexTools.Views.Controls.TextureFileControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:FFXIV_TexTools.Views.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <SolidColorBrush x:Key="DarkSquareColor" Color="#CC000000" />
        <SolidColorBrush x:Key="LightSquareColor" Color="#BF000000" />
        <Style x:Key="{x:Type xctk:Zoombox}" TargetType="{x:Type xctk:Zoombox}">
            <Style.Triggers>
                <Trigger Property="AreDragModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                </Trigger>
                <Trigger Property="AreZoomModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
                <Trigger Property="AreZoomToSelectionModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Cross" />
                </Trigger>
                <Trigger Property="AreRelativeZoomModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
                <!-- The IsDraggingContent and IsSelectingRegion triggers should 
           always be last. -->
                <Trigger Property="IsDraggingContent" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                </Trigger>
                <Trigger Property="IsSelectingRegion" Value="True">
                    <Setter Property="Cursor" Value="Cross" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="TextureViewArea">

        <Border x:Name="StandardTextureDisplay" Grid.Row="0" Visibility="Visible">
            <Border.Background>
                <DrawingBrush Viewport="0,0,20,20" ViewportUnits="Absolute" Stretch="None" TileMode="Tile">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing Brush="{DynamicResource DarkSquareColor}">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="0,0,10,10"/>
                                        <RectangleGeometry Rect="10,10,10,10"/>
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                            <GeometryDrawing Brush="{DynamicResource LightSquareColor}">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="10,0,10,10"/>
                                        <RectangleGeometry Rect="0,10,10,10"/>
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Border.Background>
            <Grid>
                
                <xctk:Zoombox x:Name="ImageZoombox" DragModifiers="0" ZoomModifiers="0" KeepContentInBounds="True" MinScale="0.05" MaxScale="20" IsAnimated="False" ViewStackMode="Disabled" PanDistance="2" >
                    <Viewbox>
                        <Image x:Name="ImageDisplay" Source="{Binding Path=ImageSource}" Effect="{Binding Path=ImageEffect}"  VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                    </Viewbox>
                </xctk:Zoombox>
                
                <StackPanel Margin="0" Background="#3FFFFFFF" VerticalAlignment="Top" HorizontalAlignment="Right" Width="160">
                    <Grid Margin="5" IsEnabled="{Binding Path=ChannelsEnabled, FallbackValue=true}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                        </Grid.RowDefinitions>
                        <CheckBox x:Name="RedCheckBox" Content="R" HorizontalAlignment="Center" Margin="-2,0,0,0" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" IsChecked="{Binding Path=RedChecked, FallbackValue=true}"/>
                        <CheckBox x:Name="GreenCheckBox" Content="G" Grid.Column="1" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding Path=GreenChecked, FallbackValue=true}"/>
                        <CheckBox x:Name="BlueCheckBox" Content="B" Grid.Column="2" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding Path=BlueChecked, FallbackValue=true}"/>
                        <CheckBox x:Name="AlphaCheckBox" Content="A" Grid.Column="3" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding Path=AlphaChecked, FallbackValue=true}"/>

                        <Button Grid.ColumnSpan="4" Grid.Row="1" Content="Edit Channels" VerticalAlignment="Center" Click="EditChannels_Click"></Button>
                    </Grid>
                </StackPanel>

                <Label x:Name="TextureFormatLabel" Content="{Binding Path=TextureFormat}" Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold"/>
                <Label x:Name="MipMapLabel" Content="{Binding Path=MipMapInfo}" Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" Margin="0,26,0,0"/>
                <Label x:Name="SharedMaterialLabel"  Background="#66FFFFFF" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="Collapsed" FontWeight="Bold" Margin="0,5,0,0"/>

                <Label x:Name="TexDimensionLabel" Content="{Binding Path=TextureDimensions}" Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="Bold"/>
                <Label x:Name="SharedVariantLabel"  Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Bottom"  FontWeight="Bold" Margin="0,0,0,26"/>
                <Label x:Name="SharedTextureLabel"  Background="#66FFFFFF" HorizontalAlignment="Left" VerticalAlignment="Bottom"  FontWeight="Bold" Margin="0,0,0,52" />
            </Grid>
        </Border>

    </Grid>
</local:FileViewControl>
